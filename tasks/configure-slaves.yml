# file: tasks/configure-slaves.yml -- postgresql pre-start configuration of the slave servers and startup

- name: "Configure-slaves: stop old postgresql service"
  service: name="postgresql" state=stopped
  when: postgresql_drop_old_cluster

- name: "Configure-slaves: remove existing data dir"
  file: path="/var/lib/postgresql/{{ postgresql_version }}/main" state=absent
  when: postgresql_drop_old_cluster

- name: "Configure-slaves: write .pgpass for postgres user"
  shell: "echo '*:*:*:{{ postgresql_streaming_user.name }}:{{ postgresql_streaming_user.pass }}' > ~postgres/.pgpass"

- name: "Configure-slaves: change permissions on .pgpass"
  file:
    path: ~postgres/.pgpass
    state: file
    owner: "{{ postgresql_admin_user }}"
    group: "{{ postgresql_admin_user }}"
    mode: 0600

- name: "Configure-slaves: initialize new postgresql cluster"
  command: "pg_basebackup -c fast -X stream -h {{ hostvars[groups['pgmaster'][0]]['ansible_default_ipv4']['address'] }} -U {{ postgresql_streaming_user.name }} -D /var/lib/postgresql/{{ postgresql_version }}/main"
  sudo: True
  sudo_user: postgres
  when: postgresql_drop_old_cluster

- name: "Configure-slaves: configure pg_hba.conf"
  template:
    src: pg_hba.conf.j2
    dest: "/etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf"
    owner: "{{ postgresql_admin_user }}"
    group: "{{ postgresql_admin_user }}"
    mode: 0640

- name: "Configure-slaves: configure postgresql.conf"
  lineinfile:
    dest: "/etc/postgresql/{{ postgresql_version }}/main/postgresql.conf"
    state: present
    regexp: "{{ item.regexp }}"
    line: "{{ item.guc }}"
  with_items: postgresql_conf_default_guc

- name: "Configure-slaves: configure recovery.conf"
  template:
    src: recovery.conf.j2
    dest: "/var/lib/postgresql/{{ postgresql_version }}/main/recovery.conf"
    owner: "{{ postgresql_admin_user }}"
    group: "{{ postgresql_admin_user }}"
    mode: 0640

- name: "Configure-slaves: create postgresql log directory"
  file:
    path: "{{ postgresql_log_directory }}"
    state: directory
    owner: "{{ postgresql_admin_user }}"
    group: "{{ postgresql_admin_user }}"
    mode: 0755
  when: postgresql_log_directory is defined

- name: "Configure-slaves: start postgresql service"
  service: name="postgresql" state=started enabled=yes
